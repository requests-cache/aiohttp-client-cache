[project]
name = "aiohttp-client-cache"
version = "0.14.2"
description = "Persistent cache for aiohttp requests"
authors = [{name = "Jordan Cook"}, {name = "Alessio Locatelli"}]
license = {text = "MIT License"}
readme = "README.md"
keywords = ["aiohttp", "async", "asyncio", "cache", "cache-backends", "client", "http",
            "persistence", "requests", "sqlite", "redis", "mongodb", "dynamodb", "dragonflydb"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Framework :: aiohttp",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "aiohttp            >=3.8",
    "attrs              >=21.2",
    "itsdangerous       >=2.0",
    "url-normalize      >=2.2",
    "typing-extensions  >=4 ; python_version<='3.10'",  # For Self type addition
]

[project.optional-dependencies]
# Optional backend dependencies
all         = ["aioboto3>=9.0", "aiobotocore>=2.0", "aiofiles>=0.6.0", "aiosqlite>=0.20", "motor>=3.1", "redis>=4.2"]
dynamodb    = ["aioboto3>=9.0", "aiobotocore>=2.0"]
filesystem  = ["aiofiles>=0.6.0", "aiosqlite>=0.20"]
mongodb     = ["motor>=3.1"]
redis       = ["redis>=4.2"]
sqlite      = ["aiosqlite>=0.20"]

[dependency-groups]
# Development dependencies
dev = [
    # For unit + integration tests
    "async-timeout  >=4.0",
    "brotli         >=1.0",
    "faker          >=30.0",
    "pytest         >=8.4",
    "pytest-aiohttp >=1.1",
    "pytest-asyncio >=1.2",
    "pytest-clarity >=1.0",
    "pytest-cov     >=6.2",
    "pytest-xdist   >=3.6",
    # For convenience in local development; additional tools are managed by pre-commit
    "nox            >=2022.11",
    "pre-commit     >=4.2",
    "types-aiofiles >=0.1.7",
]

# Documentation dependencies needed for Readthedocs builds
docs = [
    "furo                       >=2025.9; python_version>='3.11'",
    "linkify-it-py              >=2.0; python_version>='3.11'",
    "markdown-it-py             >=2.2; python_version>='3.11'",
    "myst-parser                >=3.0; python_version>='3.11'",
    "python-forge               >=18.6; python_version>='3.11'",
    "sphinx                     ~=8.2; python_version>='3.11'",
    "sphinx-automodapi          >=0.18,<0.21; python_version>='3.11'",
    "sphinx-autodoc-typehints   >=2.4; python_version>='3.11'",
    "sphinx-copybutton          >=0.5; python_version>='3.11'",
    "sphinx-inline-tabs         >=2023.4; python_version>='3.11'",
    "sphinxcontrib-apidoc       >=0.3; python_version>='3.11'",
]

# Test server dependencies
test-server = [
    "flask>=2.0",
    "gunicorn>=21.2",
]

[project.urls]
Homepage = "https://github.com/requests-cache/aiohttp-client-cache"
Repository = "https://github.com/requests-cache/aiohttp-client-cache"
Documentation = "https://aiohttp-client-cache.readthedocs.io"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["aiohttp_client_cache"]

[tool.hatch.build.targets.sdist]
include = [
    "*.md",
    "*.yml",
    "aiohttp_client_cache/",
    "docs/",
    "examples/",
    "test/",
]

[tool.coverage.html]
directory = 'test-reports'

[tool.coverage.run]
branch = true
source = ['aiohttp_client_cache']
omit = [
    'aiohttp_client_cache/__init__.py',
    'aiohttp_client_cache/backends/__init__.py',
    'aiohttp_client_cache/signatures.py',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if TYPE_CHECKING:',
]

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
check_untyped_defs=true
pretty = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 100
output-format = 'grouped'
target-version = 'py39'

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint]
select = ['B', 'C4', 'C90', 'E', 'F', 'I', 'UP']
ignore = ['B023', 'B027']

[tool.ruff.lint.isort]
known-first-party = ['test']

# Wrap lines to 100 chars, but don't error on unwrappable lines until 120 chars
[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.typos]
files.extend-exclude = ["CONTRIBUTORS.md"]
