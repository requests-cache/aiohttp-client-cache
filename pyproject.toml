[tool.poetry]
name = "aiohttp-client-cache"
version = "0.7.2"
description = "Persistent cache for aiohttp requests"
authors = ["Jordan Cook"]
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/requests-cache/aiohttp-client-cache"
repository = "https://github.com/requests-cache/aiohttp-client-cache"
keywords = ["aiohttp", "async", "asyncio", "cache", "cache-backends", "client", "http",
            "persistence", "requests", "sqlite", "redis", "mongodb", "dynamodb"]
include = [
    { path = "*.md", format = "sdist" },
    { path = "*.yml", format = "sdist" },
    { path = "aiohttp_client_cache/py.typed" },
    { path = "docs", format = "sdist" },
    { path = "examples", format = "sdist" },
    { path = "test", format = "sdist" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    'Framework :: AsyncIO',
    'Framework :: aiohttp',
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.urls]
"Documentation" = "https://aiohttp-client-cache.readthedocs.io"

[tool.poetry.dependencies]
python = "^3.7"
aiohttp = "^3.8"
attrs = ">=21.2"
itsdangerous = ">=2.0"
python-forge = "^18.6"
url-normalize = "^1.4"

# Optional backend dependencies
aioboto3 = { version = ">=9.0", optional = true }
aiobotocore = {version = ">=2.0", optional = true }
aiofiles = { version = ">=0.6.0", optional = true }
aiosqlite = { version = ">=0.16", optional = true }
motor = { version = ">=2.0", optional = true }
redis = { version = ">=4.2", optional = true }

# Documentation dependencies needed for Readthedocs builds
furo = {version = ">=2022.1.2", optional = true}
linkify-it-py = {version = "^1.0.1", optional = true}
myst-parser = {version = "^0.15.1", optional = true}
sphinx = { version = "^4.5.0", optional = true }
sphinx-automodapi = { version=">=0.14", optional = true}
sphinx-autodoc-typehints = { version = "^1.11", optional = true }
sphinx-copybutton = { version = "^0.3", optional = true }
sphinx-inline-tabs = {version = "^2022.1.2b11", optional = true, python = ">=3.8"}
sphinxcontrib-apidoc = { version = "^0.3", optional = true }

[tool.poetry.extras]
all = ["aioboto3", "aiobotocore", "aiofiles", "aiosqlite", "motor", "redis"]
dynamodb = ["aioboto3", "aiobotocore"]
filesystem = ["aiofiles", "aiosqlite"]
mongodb = ["motor"]
redis = ["redis"]
sqlite = ["aiosqlite"]
docs = ["furo", "linkify-it-py", "myst-parser", "sphinx", "sphinx-automodapi",
        "sphinx-autodoc-typehints", "sphinx-copybutton", "sphinx-inline-tabs", "sphinxcontrib-apidoc"]

[tool.poetry.dev-dependencies]
# For unit + integration tests
brotli = ">=1.0"
pytest = ">=6.2"
pytest-aiohttp = "^0.3"
pytest-asyncio = "^0.14"
pytest-clarity = "^1.0"
pytest-cov = "^2.11"
pytest-xdist = "^2.3"

# For convenience in local development; additional tools are managed by pre-commit
nox = "^2022.1.7"
nox-poetry = "^0.8.6"
pre-commit = ">=2.12"
sphinx-autobuild = ">=2021.3.14"
types-aiofiles = ">=0.1.7"

# Workarounds for possible dependency issues with importlib-metadata (3.7 only)
typing-extensions = {version = "^4.0", python = "3.7"}
zipp = {version = "^3.7", python = "3.7"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
skip-string-normalization = true

[tool.coverage.html]
directory = 'test-reports'

[tool.coverage.run]
branch = true
source = ['aiohttp_client_cache']
omit = [
    'aiohttp_client_cache/__init__.py',
    'aiohttp_client_cache/backends/__init__.py',
    'aiohttp_client_cache/docs/*',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if TYPE_CHECKING:',
]

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ['test']

[tool.mypy]
ignore_missing_imports = true
exclude = "dist|build"
