# Containers needed to test all backend services locally
services:
  httpbin:
    image: kennethreitz/httpbin
    container_name: httpbin
    ports:
      # Use an unprivileged port to support running the Docker daemon as a non-root user (Rootless mode).
      # See https://docs.docker.com/engine/security/rootless/#networking-errors
      - ${HTTPBIN_CUSTOM_PORT:-8080}:80

  httpbin-custom:
    container_name: httpbin-custom
    build:
      context: .
      dockerfile: test/server/Dockerfile
    ports:
      - '8181:8181'

  dynamodb:
    image: amazon/dynamodb-local
    hostname: dynamodb-local
    container_name: dynamodb-local
    ports:
      - 8000:8000
    command: '-jar DynamoDBLocal.jar -inMemory'
    environment:
      AWS_ACCESS_KEY_ID: 'placeholder'
      AWS_SECRET_ACCESS_KEY: 'placeholder'
    working_dir: /home/dynamodblocal

  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: aiohttp_client_cache_pytest
    ports:
      - 27017:27017
    volumes:
      - 'mongodb_data:/data/db'

  redis:
    image: docker.io/bitnami/redis
    container_name: redis
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - 6379:6379
    volumes:
      - 'redis_data:/bitnami/redis/data'

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: aiohttp_cache
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5433:5432
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
